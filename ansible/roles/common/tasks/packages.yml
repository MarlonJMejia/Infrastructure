---
# Debian distributions
- name: Upgrade and install packages
  tags:
    - common_packages
  when: ansible_facts['os_family'] is defined and ansible_facts['os_family'] == "Debian" and ansible_facts['os_family']
  block:
    - name: Get list of installed packages before update
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          dpkg-query -l | awk '/^ii/ {print "{\"name\": \"" $2 "\", \"version\": \"" $3 "\"}"}' | jq -s '.'
        executable: /bin/bash
      register: packages_before
      changed_when: packages_before == 0

    - name: Upgrade dependencies
      ansible.builtin.apt:
        upgrade: true
        cache_valid_time: 43200

    - name: Install common packages
      ansible.builtin.apt:
        name: "{{ common_packages_to_install_debian }}"

    - name: Get list of installed packages after update
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          dpkg-query -l | awk '/^ii/ {print "{\"name\": \"" $2 "\", \"version\": \"" $3 "\"}"}' | jq -s '.'
        executable: /bin/bash
      register: packages_after
      changed_when: packages_after.rc == 0

    - name: Craete JSON File with Difference in Packages
      ansible.builtin.template:
        src: ubuntu_packages.j2
        dest: ../packageinfo/packageinfo-{{ inventory_hostname }}-{{ ansible_date_time.date }}.json
        mode: "0666"
      # run_once: true
      delegate_to: localhost

    - name: Autoremove and Clean packages
      ansible.builtin.apt: { autoremove: true, clean: true }

## Redhat Distribution
- name: Upgrade and install packages
  tags:
    - common_packages
  when: ansible_facts['os_family'] is defined and ansible_facts['os_family'] == "RedHat"
  block:
    - name: Update repositories
      ansible.builtin.dnf:
        update_cache: true
      register: app_upgrade

    - name: Install EPEL repo
      yum:
        name: epel-release
        state: present

    - name: Install Packages
      ansible.builtin.dnf:
        name: "{{ common_packages_to_install_redhat }}"
      register: app_install

    - name: Write a report about what has been done
      ansible.builtin.template:
        src: report.j2
        dest: ../report-{{ ansible_date_time.iso8601_micro }}.txt
        mode: "0666"
      # run_once: true
      delegate_to: localhost

    - name: Autoremove unneeded packages installed as dependencies
      ansible.builtin.dnf:
        autoremove: true
