---
- name: Ensure wget is installed
  ansible.builtin.yum:
    name: wget
    state: present
  when: ansible_os_family == "RedHat"

- name: Ensure wget is installed
  ansible.builtin.apt:
    name:
      - wget
      - ca-certificates
      - curl
      - gnupg
      - python3-apt
      - python3-pip
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Add Docker GPG apt Key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Download the docker-compose.yml file
  ansible.builtin.get_url:
    url: https://goauthentik.io/docker-compose.yml
    dest: /var/lib/authentik/docker-compose.yml
    mode: u=rw,g=rw,o=rw

- name: Check that the .env exists
  ansible.builtin.stat:
    path: /var/lib/authentik/.env
  register: stat_result

- name: Generate .env file
  when: not stat_result.stat.exists
  block:
    - name: Ensure .env file exists
      ansible.builtin.file:
        path: /var/lib/authentik/.env
        state: touch
        mode: o=rw,g=rw,u=rw

    - name: Generate PG_PASS and append to .env
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          openssl rand 36 | base64 -w 0
        executable: /bin/bash
      register: pg_pass
      changed_when: false

    - name: Append PG_PASS to .env
      ansible.builtin.lineinfile:
        path: /var/lib/authentik/.env
        line: PG_PASS={{ pg_pass.stdout }}

    - name: Generate AUTHENTIK_SECRET_KEY and append to .env
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          openssl rand 60 | base64 -w 0
        executable: /bin/bash
      register: authentik_secret_key
      changed_when: false

    - name: Append AUTHENTIK_SECRET_KEY to .env
      ansible.builtin.lineinfile:
        path: /var/lib/authentik/.env
        line: AUTHENTIK_SECRET_KEY={{ authentik_secret_key.stdout }}

- name: Install docker python package
  ansible.builtin.apt:
    name:
      - docker
      - docker-compose
    state: present

- name: Start Authentik docker compose
  community.docker.docker_compose_v2:
    project_src: /var/lib/authentik/
    pull: always
